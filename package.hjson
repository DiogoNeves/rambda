const DOCSIFY = docsi init ./docs
const NAME = rambda
const BUILD = cross-env NODE_ENV=build rollup -c
const LINT_JS = jest scripts/lint/lint.spec.js
const LINT_TS = cd scripts/lint-ts-files&&node lint-typings-tests.js
const CREATE_DOCS = jest scripts/populate-docs-data/populate-docs-data.spec.js
const CREATE_README = jest scripts/populate-readme-data/populate-readme-data.spec.js
const TOOLBELT = jest scripts/dynamic-ts-toolbelt/dynamic-ts-toolbelt.spec.js
const OUT = jest scripts/all-scripts/all-scripts.spec.js
const OUTX = WITH_RAMBDAX=ON jest scripts/all-scripts/all-scripts.spec.js

{
  name: {{NAME}}
  "scripts": {

    // It runs all scripts needed to prepare for `Rambda` release.
    out: {{OUT}}

    // It runs all scripts needed to prepare for `Rambdax` release.
    x: {{OUTX}}

    // It creates JSON data used afterwards by the documentation site
    docs: {{CREATE_DOCS}}

    // It creates `README.md` file for both `Rambda` and `Rambdax` libraries
    readme: {{CREATE_README}}

    // Update `ts-toolbelt` dependency
    toolbelt: {{TOOLBELT}}

    // Lint all files including those in `scripts` folder
    lint: yarn lint:js&&yarn lint:ts
    "lint:ts": {{LINT_TS}}
    "lint:js": {{LINT_JS}}

    // Release
    docs: {{DOCSIFY}}
    build: yarn build:main&&yarn build:web
    "build:web": {{BUILD}} files/rollup.web.config.js
    "build:main": {{BUILD}} files/rollup.config.js
    
    // HJSON
    parse: node scripts/parse-package-json/parse-package-json
    
    new: node scripts/add-new-method/add-new-method.js
    test: jest source -u --bail=false
    
    "cover:spec": jest source --coverage --no-cache -w 1
    cover: yarn typings&&yarn cover:spec
    benchmark: jest scripts/run-benchmarks/run-benchmarks.spec.js
    benchmarkx: jest scripts/run-benchmarks/run-complex-benchmarks.spec.js
    typings: dtslint --localTs ./node_modules/typescript/lib --expectOnly ./source
    fix: mkdir $HOME/.dts/perf -p
  },
  devDependencies: {
    @babel/core: 7.12.3
    @babel/plugin-proposal-object-rest-spread: 7.12.1
    @babel/preset-env: 7.12.1
    @rollup/plugin-babel: 5.2.1
    @rollup/plugin-commonjs: 15.1.0
    @rollup/plugin-json: 4.1.0
    @rollup/plugin-node-resolve: 9.0.0
    @rollup/plugin-replace: 2.3.3
    @types/fs-extra: 9.0.2
    @types/jest: 26.0.15
    @types/ramda: 0.27.29
    combinate: 1.1.1
    cross-env: 7.0.2
    dtslint: 4.0.4
    fs-extra: 9.0.1
    helpers-fn: 0.8.1
    is-ci: 2.0.0
    jest-extended: 0.11.5
    jest: 26.6.0
    lint-fn: 2.12.0
    lodash: 4.17.20
    rambdax: 7.0.1
    ramda: 0.27.1
    rollup-plugin-cleanup: 3.2.1
    rollup-plugin-sourcemaps: 0.6.3
    rollup: 2.32.1
    string-fn: 2.12.2
    typescript: 4.1.0-dev.20201022
  },
   "jest": {
    "testEnvironment": "node",
    "testRegex": ".*\\.spec\\.js$",
    "setupFilesAfterEnv": [
      "jest-extended"
    ],
    "collectCoverageFrom": [
      "source/*.js",
      "!_internals",
      "!benchmarks"
    ]
  },
    "files": [
    "dist",
    "src",
    "_ts-toolbelt",
    "index.d.ts"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/selfrefactor/rambda.git"
  },
  "license": "MIT",
  "author": "self_refactor",
  "description": "Lightweight and faster alternative to Ramda",
  "module": "./dist/rambda.esm.js",
  main: ./dist/rambda
  "umd": "./dist/rambda.umd.js",
  "sideEffects": false,
  "keywords": [
    "ramda",
    "fp",
    "functional",
    "utility",
    "lodash"
  ],
  "bugs": {
    "url": "https://github.com/selfrefactor/rambda/issues"
  },
  "homepage": "https://github.com/selfrefactor/rambda#readme"
}
